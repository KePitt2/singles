// Responsive

/// Media Query builder for aliases devices
/// @param {String | Integer} $breakpoint - Could be an index of $breakpoints variable or measure
/// @param {Integer} $breakpoint-max (null) - Max width when $breackpoint is not a mapped expression
/// @param {String} $type (null) - Media type condition
/// @content styling rules, wrapped into a @media query
/// @example scss
///   .item {
///     @include mq('tablet') {
///       color: red;
///     }
///     @include mq(500px) {
///       color: blue;
///     }
///     @include mq(1024px, 1200px) {
///       color: green;
///     }
///     @include mq(null, 2000px) {
///       color: yellow;
///     }
///   }
///   => creates @media for each device or measure

@mixin mq($min, $max: null, $device: null, $orientation: null) {
  $media: () !default;
  $breakpoints: () !default;

  $mq: if(map-has-key($media, $min),
    map-get($media, $min),
    ($min, $max)
  );
  $min: if(map-has-key($breakpoints, nth($mq, 1)),
    map-get($breakpoints, nth($mq, 1)),
    nth($mq, 1)
  );
  $max: if(map-has-key($breakpoints, nth($mq, 2)),
    map-get($breakpoints, nth($mq, 2)) - 1,
    nth($mq, 2)
  );

  $media-query: null;
  @if (type-of($min) == 'number' or type-of($max) == 'number') {
    @if ($min != null) {
      $media-query: if($max != null,
          '(min-width: ' + $min + ') and (max-width: ' + $max + ')',
          '(min-width: ' + $min + ')'
      );
    } @else {
      $media-query: if($max != null,
          '(max-width: ' + $max + ')',
          null
      );
    }
  }

  $media-device: null;
  @if ($device != null) {
    $media-device: if($media-query or $orientation,
      $device + ' and ',
      $device
    );
  }

  $media-orientation: null;
  @if ($orientation != null) {
    $orientation: '(orientation: ' + $orientation + ')';
    $media-orientation: if($media-query != null or $media-device == null,
      ' and ' + $orientation,
      $orientation
    );
  }

  @if ($media-device or $media-query or $media-orientation) {
    @media #{$media-device}#{$media-query}#{$media-orientation} {
      @content;
    }
  } @else {
    @content;
  }
}

// Special devices MQ

@mixin retina() {
  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (min--moz-device-pixel-ratio: 2),
  only screen and (-o-min-device-pixel-ratio: 2/1),
  only screen and (min-device-pixel-ratio: 2),
  only screen and (min-resolution: 192dpi),
  only screen and (min-resolution: 2dppx) {
    @content;
  }
} // Retina display

@mixin notch() {
  @media only screen and (min-device-width : 375px) and (max-device-width: 900px) and (min-device-height : 375px) and (max-device-height: 900px) and(-webkit-device-pixel-ratio : 2) and (orientation: landscape), only screen and (min-device-width : 375px) and (max-device-width: 900px) and (min-device-height : 375px) and (max-device-height: 900px) and (-webkit-device-pixel-ratio : 3) and (orientation: landscape){
    @content;
  }
} // Notch feature

@mixin iphone-x($orientation: null) {
  @if ($orientation == 'portrait') {
    @media only screen and (device-width : 375px) and (device-height : 812px) and (-webkit-device-pixel-ratio : 3) and (orientation: portrait) {
      @content;
    }
  }

  @if ($orientation == 'landscape') {
    @media only screen and (device-width : 375px) and (device-height : 812px) and (-webkit-device-pixel-ratio : 3) and (orientation: landscape) {
      @content;
    }
  }

  @if ($orientation == null) {
    @media only screen and (device-width : 375px) and (device-height : 812px) and (-webkit-device-pixel-ratio : 3) {
      @content;
    }
  }
} // iPhone X

@mixin ipad-pro($type, $orientation) {
  @if ($type == 'normal' and $orientation == 'portrait') {
    @media only screen and (min-device-width : 834px) and (max-device-width : 834px) and (orientation: portrait) and (-webkit-min-device-pixel-ratio: 2) {
      @content;
    }
  }

  @if ($type == 'normal' and $orientation == 'landscape') {
    @media only screen and (min-device-width : 1112px) and (max-device-width : 1112px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 2) {
      @content;
    }
  }

  @if ($type == 'large' and $orientation == 'portrait') {
    @media only screen and (min-device-width : 1024px) and (max-device-width : 1024px) and (orientation: portrait) and (-webkit-min-device-pixel-ratio: 2) {
      @content;
    }
  }

  @if ($type == 'large' and $orientation == 'landscape') {
    @media only screen and (min-device-width : 1366px) and (max-device-width : 1366px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 2) {
      @content;
    }
  }
} // iPad Pro 10.5" and 12.9"

// Utils

@mixin img-responsive($display: block) {
  display: $display;
  max-width: 100%;
  height: auto;
}
