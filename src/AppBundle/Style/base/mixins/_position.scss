// Position helpers

/// Shorthand position: position for absolute or fixed items
/// @param {String} $position - position type
/// @param {Integer} $top - top rule
/// @param {Integer} $right - right rule
/// @param {Integer} $bottom - bottom rule
/// @param {Integer} $left - left rule
/// @example scss
///   div.custom-column {
///     @include position(null, auto, 10px, 10%);
///   }
///   => div.custom-column {
///     right: auto;
///     bottom: 10px;
///     left: 10%;
///   }
@mixin position($position: static, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;

  @if ($position != static) {
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
  } @else {
    margin-top: $top;
    margin-right: $right;
    margin-bottom: $bottom;
    margin-left: $left;
  }
}

/// Shorthand mixin for absolute positioning
/// Serves as an alias for `position(absolute, ...)`
/// @param {Arglist} $args - Offsets
/// @require {mixin} position
@mixin absolute($args...) {
  @include position(absolute, $args...);
}

/// Shorthand mixin for relative positioning
/// Serves as an alias for `position(relative, ...)`
/// @param {Arglist} $args - Offsets
/// @require {mixin} position
@mixin relative($args...) {
  @include position(relative, $args...);
}

/// Shorthand mixin for fixed positioning
/// Serves as an alias for `position(fixed, ...)`
/// @param {Arglist} $args - Offsets
/// @require {mixin} position
@mixin fixed($args...) {
  @include position(fixed, $args...);
}

/// Shorthand mixin for static positioning
/// Serves as an alias for `position(static, ...)`
/// @require {mixin} position
@mixin static($args...) {
  @include position(static, $args...);
}

/// Center align
/// Vertical/Horizontal center align for layers
/// @require {mixin} absolute
/// @require {mixin} relative
/// @param {String} $align - vertical, horizontal or all for both
/// @param {Boolean} $absolute - true for absolute positioning or false for relative
@mixin center($align: 'all', $absolute: true) {
  @if ($absolute) {
    @if ($align == 'vertical') {
      @include absolute($top: 50%);
      @include transform(translateY(-50%));
    } @else if($align == 'horizontal') {
      @include absolute($left: 50%);
      @include transform(translateX(-50%));
    } @else {
      @include absolute($top: 50%, $left: 50%);
      @include transform(translate(-50%, -50%));
    }
  } @else {
    @if ($align == 'vertical') {
      @include relative($top: 50%);
      @include transform(translateY(-50%));
    } @else if($align == 'horizontal') {
      @include relative($left: 50%);
      @include transform(translateX(-50%));
    } @else {
      @include relative($top: 50%, $left: 50%);
      @include transform(translate(-50%, -50%));
    }
  }
}